# coding: utf-8

"""
    Oxford Dictionaries

    Oxford Dictionaries, part of the Oxford Language Division, is a leading authority on the English language. It offers a wide range of language resources, including dictionaries, thesauruses, grammar guides, and language learning tools. Oxford Dictionaries provides accurate and up-to-date definitions, word origins, and usage examples to support language comprehension and communication.

    The version of the OpenAPI document: 1.11.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class StatsWordResultResult(BaseModel):
    # The number of times a word appears in the entire corpus
    frequency: int = Field(alias='frequency')

    # The number of database records that matched the query params (stated frequency is the sum of the individual frequencies)
    match_count: int = Field(alias='matchCount')

    # The number of times a word appears on average in 1 million words
    normalized_frequency: int = Field(alias='normalizedFrequency')

    # A lemma of the word (e.g., wordforms \"lay\", \"laid\" and \"laying\" have all lemma \"lay\")
    lemma: typing.Optional[str] = Field(None, alias='lemma')

    # A lexical category such as 'verb' or 'noun'
    lexical_category: typing.Optional[str] = Field(None, alias='lexicalCategory')

    # A given written realisation of a an entry (e.g., \"lay\") usually lower case
    true_case: typing.Optional[str] = Field(None, alias='trueCase')

    # A given written realisation of a an entry (e.g., \"Lay\") preserving case
    wordform: typing.Optional[str] = Field(None, alias='wordform')
    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
